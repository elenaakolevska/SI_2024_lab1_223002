1. done
2. done
3. done
4.
$ mkdir SI_2024_lab1_223002 -> Направи директориум
$ cd  SI_2024_lab1_223002 -> Влези во тој директориум
$ git init -> Иницијализирање празен Git репозиториум
5. 
$ git remote add origin https://github.com/elenaakolevska/SI_2024_lab1_223002.git - Поврзување на локалниот 
репозиториум со оддалечениот репозиториум
6.
$ nano README.md -> Креирање нова датотека
$ git add README.md  -> Додавање на stage
$ git commit -m "Initial commit" -> Правење commit со порака
7.
$ cp Desktop/SILab1Main.java Desktop/SILab1_1.java Desktop/SILab1_2.java SI_2024_lab1_223002/   -> Додавање на
преземените фајлови во локалниот репозиториум
$ git add --all  -> Додавање на stage
$ git commit -m "Add starter code"  -> Иницијализирање празен Git репозиториум

8.
$ git push -u origin master  -> Додавање на фајловите во remote репозиториумот
9.
$ git branch bug1  -> Креирање нова гранка
$ git branch bug2  -> Креирање нова гранка
10.
$ git checkout bug1  -> Префрлање на гранката bug1  
11.
$ nano SILab1_1.java  -> Поправање на грешката во фајлот
$ git add SILab1_1.java -> Додавање на stage
$ git commit -m "Fix wrong condition in filterOddLengthStrings." -> Правење commit со порака
12.
$ git checkout bug2 -> Префрлање на гранката bug2
13.
$ nano SILab1_2.java  -> Поправање на грешката во фајлот
$ git add SILab1_2.java  -> Додавање на stage
$ git commit -m "Fix wrong condition in makeBigStringFrom." -> Правење commit со порака
14.
$ git checkout bug1  -> Префрлање на кранката bug1  
15.
$ nano SILab1Main.java
$ git add SILab1Main.java
$ git commit -m "Call method filterOddLengthStrings in main class."
16. 
$ git checkout bug2  -> Префрлање на гранката bug2
17.
$ nano SILab1Main.java
$ git add SILab1Main.java
$ git commit -m "Call method makeBigStringFrom in main class." 
18.
$ git push origin bug2
$ git push origin bug1
Синхронизирање на сите гранки со оддалечениот репозиториум
19.
$ git checkout master
20.
$ git merge bug1 -> Спојување на гранката bug1 со master -> Нема конфликт, спојување со Fast forward

21. 
$ git push --all  -> Синхронизирање на сите гранки со оддалечениот репозиториум
22.
$ git checkout bug2  -> Префрлање на гранката bug2
23.
$ git rebase master -> Rebase спрема гранката master. Има конфликти
$ nano SILab1Main.java  -> Менување во фајлот, направив избор помеѓу двете линиии код
$ git add SILab1Main.java -> Го додадов фајлот на stage
$ git rebase --continue  -> Продолжување на rebase, успешно
24.
$ git checkout master -> Префрлање на гранката master
25.
$ git merge bug2 -> Нема конфликти, спојување со Fast-forward
26.
$ git push --all -> Синхронизација на сите гранки со оддалечен репозиториум -> REJECTED
27.
$ git push --force origin bug2 -> Присилен push
28.
$ git log >> logs.txt  -> Копирање на досегашните git логови во нова датотека logs.txt
$ nano 223002.txt -> Копирање на досегашната документација во новата датотека 223002.txt













